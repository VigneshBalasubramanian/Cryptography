package com.crypto.application;

import java.security.NoSuchAlgorithmException;

import javax.swing.JLabel;

import com.crypto.cryptographic.Crypto;
import com.crypto.cryptographic.DigitalSignature;
import com.crypto.cryptographic.RSA;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class DigSign extends javax.swing.JFrame {

    /**
     *
     */
    private static final long serialVersionUID = 6199448185392486835L;

    /**
     * Creates new form Find
     */
    public DigSign() {
        initComponents();
        setLocationRelativeTo(null);
        ((JLabel) cbKeySize.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
    }

    private RSA rsa = new RSA(true);
    private DigitalSignature signature = new DigitalSignature(true);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fc = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textPrivateKey = new javax.swing.JTextField();
        textPublicKey = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbKeySize = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnProcess = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbHashType = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbInputType = new javax.swing.JComboBox<>();
        text = new javax.swing.JTextField();
        textInputFile = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textSign = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnFile = new javax.swing.JButton();
        cbProcess = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();

        setTitle("Public Key - Encrypt");
        setResizable(false);

        jButton1.setText("Generate Key Pair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Private Key");

        textPrivateKey.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textPrivateKeyFocusGained(evt);
            }
        });

        textPublicKey.setEditable(false);
        textPublicKey.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textPublicKeyFocusGained(evt);
            }
        });

        jLabel2.setText("Public Key");

        cbKeySize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "512", "1024", "2048" }));
        cbKeySize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKeySizeActionPerformed(evt);
            }
        });

        jLabel3.setText("Key Size");

        btnProcess.setText("Sign");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        jLabel6.setText("SHA Type");

        cbHashType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SHA1", "SHA256", "SHA384", "SHA512" }));

        jLabel7.setText("Input Type");

        cbInputType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Text", "File" }));
        cbInputType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbInputTypeActionPerformed(evt);
            }
        });

        textInputFile.setEditable(false);

        jLabel4.setText("Input File");

        textSign.setEditable(false);

        jLabel8.setText("Sign Text");

        jLabel9.setText("Text");

        btnFile.setText("...");
        btnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileActionPerformed(evt);
            }
        });

        cbProcess.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sign", "Verify" }));
        cbProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProcessActionPerformed(evt);
            }
        });

        jLabel10.setText("Process");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(jButton1)
                        .add(18, 18, 18)
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cbKeySize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cbHashType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cbInputType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(text, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 446, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, textPublicKey, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 446, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, textPrivateKey, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 446, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .add(textInputFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 415, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(btnFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(cbProcess, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(btnProcess, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(textSign, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 446, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(cbKeySize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(cbHashType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(cbInputType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(textPrivateKey, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(textPublicKey, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(text, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel9))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(textInputFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(textSign, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton2)
                    .add(btnProcess)
                    .add(cbProcess, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            rsa.generateKeyPair();
            textPrivateKey.setText(rsa.getPrivateKey());
            textPublicKey.setText(rsa.getPublicKey());
        } catch (NoSuchAlgorithmException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textPrivateKeyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textPrivateKeyFocusGained
        textPrivateKey.selectAll();
    }//GEN-LAST:event_textPrivateKeyFocusGained

    private void textPublicKeyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textPublicKeyFocusGained
        textPublicKey.selectAll();
    }//GEN-LAST:event_textPublicKeyFocusGained

    private void cbKeySizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKeySizeActionPerformed
        Crypto.KEY_SIZE = Integer.parseInt((String) cbKeySize.getSelectedItem());
    }//GEN-LAST:event_cbKeySizeActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        String msg = "Digital Signature Verified";
        if (cbInputType.getSelectedIndex() == 0) {
            if (cbProcess.getSelectedIndex() == 0) {
                textSign.setText(signature.sign(text.getText(), textPrivateKey.getText(), (String) cbHashType.getSelectedItem()));
            } else {
                boolean verified = signature.verify(text.getText(), textPublicKey.getText(), textSign.getText(), (String) cbHashType.getSelectedItem());
                if (!verified) {
                    msg = "Digital Signature Not Verified";
                }
                JOptionPane.showMessageDialog(this, msg);
            }
        } else if (cbProcess.getSelectedIndex() == 0) {
            textSign.setText(signature.sign(fc.getSelectedFile(), textPrivateKey.getText(), (String) cbHashType.getSelectedItem()));
        } else {
            boolean verified = signature.verify(fc.getSelectedFile(), textPublicKey.getText(), textSign.getText(), (String) cbHashType.getSelectedItem());
            if (!verified) {
                msg = "Digital Signature Not Verified";
            }
            JOptionPane.showMessageDialog(this, msg);
        }
    }//GEN-LAST:event_btnProcessActionPerformed

    private void cbInputTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbInputTypeActionPerformed
        if (cbInputType.getSelectedIndex() == 0) {
            text.setEnabled(true);
            textInputFile.setEnabled(false);
            btnFile.setEnabled(false);
        } else {
            text.setEnabled(false);
            textInputFile.setEnabled(true);
            btnFile.setEnabled(true);
        }
    }//GEN-LAST:event_cbInputTypeActionPerformed

    private void btnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileActionPerformed
        int returnValue = fc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fc.getSelectedFile();
            if (selectedFile.exists() && selectedFile.isFile()) {
                textInputFile.setText(selectedFile.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_btnFileActionPerformed

    private void cbProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProcessActionPerformed
        if (cbProcess.getSelectedIndex() == 0) {
            textPrivateKey.setEditable(true);
            textPublicKey.setEditable(false);
            textSign.setEditable(false);
            btnProcess.setText("Sign");
        } else {
            textPrivateKey.setEditable(false);
            textPublicKey.setEditable(true);
            textSign.setEditable(true);
            btnProcess.setText("Verify");
        }
    }//GEN-LAST:event_cbProcessActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnFile;
    public javax.swing.JButton btnProcess;
    public javax.swing.JComboBox<String> cbHashType;
    public javax.swing.JComboBox<String> cbInputType;
    public javax.swing.JComboBox<String> cbKeySize;
    public javax.swing.JComboBox<String> cbProcess;
    private static javax.swing.JFileChooser fc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JTextField text;
    public javax.swing.JTextField textInputFile;
    private javax.swing.JTextField textPrivateKey;
    private javax.swing.JTextField textPublicKey;
    private javax.swing.JTextField textSign;
    // End of variables declaration//GEN-END:variables

}
